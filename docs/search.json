[
  {
    "objectID": "prep_rasters.html",
    "href": "prep_rasters.html",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "",
    "text": "Once we have LANDFIRE data, we often want to clip it to a specific landscape, which in this demo is LANDFIRE Map Zone 35.\nIn this demonstration we crop, mask and build attribute table for the area"
  },
  {
    "objectID": "prep_rasters.html#skills-learned",
    "href": "prep_rasters.html#skills-learned",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "",
    "text": "Once we have LANDFIRE data, we often want to clip it to a specific landscape, which in this demo is LANDFIRE Map Zone 35.\nIn this demonstration we crop, mask and build attribute table for the area"
  },
  {
    "objectID": "prep_rasters.html#set-up",
    "href": "prep_rasters.html#set-up",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nFollow the set up instructions and run the code on the Download data page, or similar for your landscape and LANDFIRE datasets of interest.\nCreate a new script for the following code.\n\nOnce this set up is complete, you should be able to copy/paste the code below into the r script you created above.\n\nCode to load packages and inputs\n```{r}\n#| label: Set up\n#| message: false\n#| warning: false\n#| echo: true\n#| results: \"hide\"\n#| code-overflow: wrap\n\n\n# install packages if needed\n  # install.packages(\"foreign\")\n  # install.packages(\"sf\")\n  # install.packages(\"terra\")\n  # install.packages(\"tidyverse\")\n\n# load packages\n\nlibrary(foreign)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile, plot to check\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n\n# read in .csv of CONUS-wide attributes\n\nbps_conus_atts &lt;- read_csv(\"inputs/LF20_BPS_220.csv\")\nevt_conus_atts &lt;- read_csv(\"inputs/LF23_EVT_240.csv\")\n\n# look at the first few rows of the CONUS-wide attribute tables\nhead(bps_conus_atts)\nhead(evt_conus_atts)\n\n# plot the shape for fun\nplot(shp)\n\n\n```"
  },
  {
    "objectID": "prep_rasters.html#crop-mask-and-build-attribute-table-for-the-area",
    "href": "prep_rasters.html#crop-mask-and-build-attribute-table-for-the-area",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Crop, mask and build attribute table for the area",
    "text": "Crop, mask and build attribute table for the area\nNow that we have the BpS data for the extent of our area of interest, we need to crop/mask it to the exact area of interest, build the raster attribute table and do a few calculations:\n\nFirst, we load our stacked raster data from the file landfire_data.tif.\nNext, we crop and mask this raster using a shapefile to focus on our area of interest.\nWe then plot the cropped and masked raster to visualize our area of interest.\nWe set the levels of the raster to match our attribute data and specify the active category.\n\nExtracting and Processing Values: We extract values from the raster, remove any NA values, and convert the data into a dataframe. This dataframe is then processed to create a frequency table, which is further refined and joined with the raster categories.\nSaving the Results: Finally, we save the processed raster and the attributes dataframe to files for future use.\n```{r}\n#| label: Crop, mask and build attributes\n#| echo: true\n#| message: false\n#| warning: false\n#| code-overflow: wrap\n#| include: true\n#| results: hide\n\n\n## Split stacked rasters ----\n\n# read in stacked raster\nstacked_rasters &lt;- rast(\"inputs/landfire_data_dbnf.tif\")\n\n# \"split\" downloaded raster into separate layers\nfor(lyr in names(stacked_rasters)) assign(lyr, stacked_rasters[[lyr]])\n\n\n# crop and mask the us_200bps raster using the shapefile\nbps_aoi &lt;- US_200BPS %&gt;%\n  crop(shp) %&gt;%\n  mask(shp)\n\n# set the levels of the raster to bps_conus_atts\nlevels(bps_aoi)[[1]] &lt;- bps_conus_atts\n# set the active category of the raster to \"value\"\nactiveCat(bps_aoi) &lt;- \"VALUE\"\n\n# extract values from the raster, remove na values, and convert to dataframe\nbps_aoi_atts &lt;- values(bps_aoi, dataframe = T, na.rm = T) %&gt;%\n  # create a frequency table of the values\n  table(dnn = \"VALUE\") %&gt;%\n  # convert the table to a dataframe\n  as.data.frame() %&gt;%\n  # convert all columns to character type\n  mutate_all(as.character) %&gt;%\n  # convert all columns to integer type\n  mutate_all(as.integer) %&gt;%\n  # join the dataframe with the raster categories\n  left_join(cats(bps_aoi)[[1]], by = \"VALUE\") %&gt;%\n  # filter out rows with a frequency of 0\n  filter(Freq != 0) %&gt;%\n  # calculate acres and relative percentage\n  mutate(ACRES = round((Freq * 900 / 4046.86), 0),\n         REL_PERCENT = round((Freq / sum(Freq)), 3) * 100) %&gt;%\n  # arrange the dataframe by relative percentage in descending order\n  arrange(desc(REL_PERCENT))\n\n# write the raster to a file with specified options\nwriteRaster(bps_aoi, \"outputs/bps_aoi.tif\",\n            gdal = c(\"COMPRESS=NONE\", \"TFW=YES\"),\n            datatype = \"INT2S\",\n            overwrite = T)\n\n# write the attributes dataframe to a dbf file\nwrite.dbf(bps_aoi_atts, \"outputs/bps_aoi.tif.vat.dbf\")\n\n# write the attributes dataframe to a csv file\nwrite.csv(bps_aoi_atts, \"outputs/bps_aoi_attributes.csv\")\n\n# plot the cropped and masked raster\nplot(bps_aoi)\n\n# look at the first few rows of the aoi attributes\nhead(bps_aoi_atts)\n\n\n\n    \n```"
  },
  {
    "objectID": "prep_rasters.html#next-steps",
    "href": "prep_rasters.html#next-steps",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Next steps",
    "text": "Next steps\nAbove we only processed the BpS data. We have the EVT data and the process is similar. We suggest challenging yourself to process the EVT data next. The steps are very similar for these categorical LANDFIRE datasets.\nAdditionally, you can now open up the processed raster(s) in ArcGIS pro and/or QGIS to do further GIS. This process really shines when you do multiple LANDFIRE datasets at once and/or process data for multiple landscapes.\nWhile we are sure it is possible to make attractive, accessible maps with the processed LANDFIRE rasters in R, we typically move to a different GIS software for mapping, or summarize the data by polygons (e.g., watersheds or hexagons) in R. See"
  },
  {
    "objectID": "make_charts.html",
    "href": "make_charts.html",
    "title": "Make simple charts with LANDFIRE data",
    "section": "",
    "text": "Summarizing data in charts is a quick way to convey patterns and, in the case below, demonstrate which LANDFIRE Biophysical Settings were mapped as most dominant on our landscape"
  },
  {
    "objectID": "make_charts.html#skills-learned",
    "href": "make_charts.html#skills-learned",
    "title": "Make simple charts with LANDFIRE data",
    "section": "",
    "text": "Summarizing data in charts is a quick way to convey patterns and, in the case below, demonstrate which LANDFIRE Biophysical Settings were mapped as most dominant on our landscape"
  },
  {
    "objectID": "make_charts.html#set-up",
    "href": "make_charts.html#set-up",
    "title": "Make simple charts with LANDFIRE data",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nWork through the preceding pages, Download data and Prepare rasters, or otherwise make sure you have a datasheet with BpS names and Relative Percentages at the least.\n\n\n\nCode to load packages and inputs\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "download.html",
    "href": "download.html",
    "title": "Download LANDFIRE data into R",
    "section": "",
    "text": "First step in using LANDFIRE data is getting the data. There are many ways to get the data-here we will use the rlandfire package by Mark Buckner to download LANDFIRE data then prep it for use.\nIn this demonstration we download LANDFIRE Biophysical Settings (BpS) and Existing Vegetation Type (EVT) data, extract and rename the files."
  },
  {
    "objectID": "download.html#skills-learned",
    "href": "download.html#skills-learned",
    "title": "Download LANDFIRE data into R",
    "section": "",
    "text": "First step in using LANDFIRE data is getting the data. There are many ways to get the data-here we will use the rlandfire package by Mark Buckner to download LANDFIRE data then prep it for use.\nIn this demonstration we download LANDFIRE Biophysical Settings (BpS) and Existing Vegetation Type (EVT) data, extract and rename the files."
  },
  {
    "objectID": "download.html#set-up",
    "href": "download.html#set-up",
    "title": "Download LANDFIRE data into R",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nSet up a new R-Studio project named something such as “r_landfire_demos”\nCreate two directories, “inputs” and “outputs”\nDownload “bps_demo.zip” (clicking will initiate the download that will likely land in your “C:” directory) which contains:\n\nLANDFIRE Map Zone 35 shapefile\nBpS attributes file as a .csv\n\nExtract the “bps_demo.zip” files into the “inputs” sub-directory of your r-studio project.\nCreate and save a new r-script with a name such as “bps_demo_code”.\n\nOnce this set up is complete, you should be able to copy/paste the code below into the r script you created above.\n\nCode to load packages and inputs\n\n# install packages if needed\n  # install.packages(\"foreign\")\n  # install.packages(\"rlandfire\")\n  # install.packages(\"sf\")\n  # install.packages(\"terra\")\n  # install.packages(\"tidyverse\")\n\n# load packages\n\nlibrary(foreign)\nlibrary(rlandfire)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile, plot to check\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n\n# read in .csv of CONUS-wide attributes\n\nbps_conus_atts &lt;- read_csv(\"inputs/LF20_BPS_220.csv\")\n\n# look at the first few rows of the CONUS-wide attribute table\nhead(bps_conus_atts)\n\n# plot the shape for fun\nplot(shp)"
  },
  {
    "objectID": "download.html#download-manage-and-load-data",
    "href": "download.html#download-manage-and-load-data",
    "title": "Download LANDFIRE data into R",
    "section": "Download manage and load data",
    "text": "Download manage and load data\nTo obtain and manage LANDFIRE data we need to:\n\nDefine the Area of Interest (AOI): The code gets the area of interest from a shapefile.\nSet Parameters for the API Call: It specifies the product code, coordinate system (EPSG:4326), resolution (30 meters), and your email address for the API.\nCreate a Temporary File: A temporary file is created to save the downloaded data.\nCall the LANDFIRE API: The API is called with the specified parameters, and the data is saved to the temporary file.\nMake sure the downloaded data lands in a place where you can find and use it easily\n\nDefine the Destination Path: The destination path for the downloaded file is set.\nMove and Rename the File: The temporary file is moved to the destination path and renamed.\nCreate a Temporary Directory for Unzipping: A temporary directory is created to unzip the downloaded file.\nUnzip the File: The file is unzipped into the temporary directory.\nGet the List of Unzipped Files: A list of unzipped files is obtained.\nRename Each Unzipped File: Each unzipped file is renamed to “landfire_data” followed by its original extension.\nClean Up the Temporary Directory: The temporary directory and its contents are deleted.\n\n\nThe code below does that in roughly 2 minutes with an internet download speed of ~450mbs. Your times may vary.\n```{r}\n#| label: Download manage and load data\n#| echo: true\n#| message: false\n#| warning: false\n#| code-overflow: wrap\n#| include: true\n#| results: hide\n\naoi &lt;- getAOI(shp)\n\nproducts &lt;-  c(\"200BPS\", \"240EVT\")  # note, you can download multiple datasets at once\nprojection &lt;- 5070  \nresolution &lt;- 30\nemail &lt;- \"rswaty@tnc.org\" # REPLACE WITH YOUR E-MAIL ADDRESS PLEASE! \n\n# R specific arguments\nsave_file &lt;- tempfile(fileext = \".zip\")\n\n# call API\nncal &lt;- landfireAPIv2(\n  products, \n  aoi, \n  projection, \n  resolution, \n  path = save_file,\n  email = email)\n\n\n# define the destination path\ndest_file &lt;- file.path(\"inputs\", \"landfire_data.zip\")\n\n# move and rename the file\nfile.rename(save_file, dest_file)\n\n# create a temporary directory for unzipping\ntemp_dir &lt;- tempfile()\ndir.create(temp_dir)\n\n# unzip the file into the temporary directory\nunzip(dest_file, exdir = temp_dir)\n\n# get the list of unzipped files\nunzipped_files &lt;- list.files(temp_dir, full.names = TRUE)\n\n# rename each unzipped file to \"landfire_data\" with its full original extension\nfor (file in unzipped_files) {\n  file_name &lt;- basename(file)\n  file_extension &lt;- sub(\"^[^.]*\", \"\", file_name)  # Extract the full extension\n  new_file_path &lt;- file.path(\"inputs\", paste0(\"landfire_data\", file_extension))\n  file.rename(file, new_file_path)\n}\n\n# clean up the temporary directory\nunlink(temp_dir, recursive = TRUE)\n\n\n\n```"
  },
  {
    "objectID": "download.html#next-steps",
    "href": "download.html#next-steps",
    "title": "Download LANDFIRE data into R",
    "section": "Next steps",
    "text": "Next steps\nYou should see a set of files with “landfire” in the name. Next go to the Prepare rasters page to learn how to load them into R, clip/mask and view them."
  },
  {
    "objectID": "download.html#more-resources",
    "href": "download.html#more-resources",
    "title": "Download LANDFIRE data into R",
    "section": "More resources",
    "text": "More resources\n\nAdd Mark’s site and note he has tutorial\nR python (not tested)"
  },
  {
    "objectID": "bps.html",
    "href": "bps.html",
    "title": "Biophysical Settings (BpS) Data",
    "section": "",
    "text": "We use LANDFIRE’s Biophysical Settings (BpS) data to help us understand the ecological potential of a landscape.\n\nBiophysical Settings represent the vegetation system that may have been dominant on the landscape prior to Euro-American settlement. Read more."
  },
  {
    "objectID": "bps.html#landfire-biophysical-settings-data",
    "href": "bps.html#landfire-biophysical-settings-data",
    "title": "Biophysical Settings (BpS) Data",
    "section": "",
    "text": "We use LANDFIRE’s Biophysical Settings (BpS) data to help us understand the ecological potential of a landscape.\n\nBiophysical Settings represent the vegetation system that may have been dominant on the landscape prior to Euro-American settlement. Read more."
  },
  {
    "objectID": "bps.html#skills-learned",
    "href": "bps.html#skills-learned",
    "title": "Biophysical Settings (BpS) Data",
    "section": "Skills learned",
    "text": "Skills learned\nOften we want to summarize and visualize spatial data, which can be challenging. Making a simple bar chart is not too hard, but what about making an accessible map that might have several categories (of ecosystems for example), is attractive and is ‘scale appropriate’ in level of detail?\nIn this demonstration we:\n\nDownload LANDFIRE Biophysical Settings (BpS) data, manage and load into R\nCrop, mask and build attribute table for the area\nMake a simple bar chart of the top BpSs using ggplot2\nMake an interactive hexbin map as one way to tackle some of the challenges of mapping categorical raster data.\n\n\nSet up\nTo run the code below you will need to:\n\nSet up a new R-Studio project named something such as “r_landfire_demos”\nCreate two directories, “inputs” and “outputs”\nDownload “bps_demo.zip” (clicking will initiate the download that will likely land in your “C:” directory) which contains:\n\nLANDFIRE Map Zone 35 shapefile\nBpS attributes file as a .csv\n\nExtract the “bps_demo.zip” files into the “inputs” directory\nCreate and save a new r-script with a name such as “bps_demo_code”.\n\nOnce this set up is complete, you should be able to copy/paste the code below into the r script you created above."
  },
  {
    "objectID": "bps.html#code-to-load-packages-read-in-datasets-and-create-accessible-palette-for-maps",
    "href": "bps.html#code-to-load-packages-read-in-datasets-and-create-accessible-palette-for-maps",
    "title": "Biophysical Settings (BpS) Data",
    "section": "Code to load packages, read in datasets, and create accessible palette for maps",
    "text": "Code to load packages, read in datasets, and create accessible palette for maps\n\n# install packages if needed\n  # install.packages(\"exactextractr\")\n  # install.packages(\"foreign\")\n  # install.packages(\"leaflet\")\n  # install.packages(\"rlandfire\")\n  # install.packages(\"sf\")\n  # install.packages(\"terra\")\n  # install.packages(\"tidyverse\")\n\n# load packages\nlibrary(exactextractr)\nlibrary(foreign)\nlibrary(htmlwidgets)\nlibrary(leaflet)\nlibrary(rlandfire)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile, plot to check\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n\n# read in .csv of CONUS-wide attributes\n\nbps_conus_atts &lt;- read_csv(\"inputs/LF20_BPS_220.csv\")\n\n\n# set landscape name---not really needed here but useful if working with many datasets and need to make multiple charts with the same landscape name for example\nlandscape_name &lt;- \"LANDFIRE Map Zone 35 (central Texas)\"  ## CHANGE THIS WHEN YOU ADD IN YOUR AREA OF INTEREST\n\n# create an accessible pallette (from https://thenode.biologists.com/data-visualization-with-flying-colors/research/)\ncustom_palette &lt;- c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\", \"#999999\", \"#E6AB02\", \"#F4A582\")\n\n# plot the shape for fun\nplot(shp)\n\n\n\n\n\n\n\n# look at the first few rows of the CONUS-wide attribute table\nhead(bps_conus_atts)\n\n\nDownload manage and load data\nTo obtain and manage LANDFIRE data we need to:\n\nDefine the Area of Interest (AOI): The code gets the area of interest from a shapefile.\nSet Parameters for the API Call: It specifies the product code, coordinate system (EPSG:4326), resolution (30 meters), and your email address for the API.\nCreate a Temporary File: A temporary file is created to save the downloaded data.\nCall the LANDFIRE API: The API is called with the specified parameters, and the data is saved to the temporary file.\nMake sure the downloaded data lands in a place where you can find and use it easily\n\nDefine the Destination Path: The destination path for the downloaded file is set.\nMove and Rename the File: The temporary file is moved to the destination path and renamed.\nCreate a Temporary Directory for Unzipping: A temporary directory is created to unzip the downloaded file.\nUnzip the File: The file is unzipped into the temporary directory.\nGet the List of Unzipped Files: A list of unzipped files is obtained.\nRename Each Unzipped File: Each unzipped file is renamed to “landfire_data” followed by its original extension.\nClean Up the Temporary Directory: The temporary directory and its contents are deleted.\n\n\nFinally we load the data into R.\nThe code below does that in roughly 2 minutes with an internet download speed of ~450mbs. Your times may vary.\n```{r}\n#| label: Download manage and load data\n#| echo: true\n#| message: false\n#| warning: false\n#| code-overflow: wrap\n#| include: true\n#| results: hide\n\naoi &lt;- getAOI(shp)\n\nproducts &lt;-  c(\"200BPS\")\nprojection &lt;- 5070  \nresolution &lt;- 30\nemail &lt;- \"rswaty@tnc.org\" # REPLACE WITH YOUR E-MAIL ADDRESS PLEASE! \n\n# R specific arguments\nsave_file &lt;- tempfile(fileext = \".zip\")\n\n# call API\nncal &lt;- landfireAPIv2(\n  products, \n  aoi, \n  projection, \n  resolution, \n  path = save_file,\n  email = email)\n\n\n# define the destination path\ndest_file &lt;- file.path(\"inputs\", \"landfire_data.zip\")\n\n# move and rename the file\nfile.rename(save_file, dest_file)\n\n# create a temporary directory for unzipping\ntemp_dir &lt;- tempfile()\ndir.create(temp_dir)\n\n# unzip the file into the temporary directory\nunzip(dest_file, exdir = temp_dir)\n\n# get the list of unzipped files\nunzipped_files &lt;- list.files(temp_dir, full.names = TRUE)\n\n# rename each unzipped file to \"landfire_data\" with its full original extension\nfor (file in unzipped_files) {\n  file_name &lt;- basename(file)\n  file_extension &lt;- sub(\"^[^.]*\", \"\", file_name)  # Extract the full extension\n  new_file_path &lt;- file.path(\"inputs\", paste0(\"landfire_data\", file_extension))\n  file.rename(file, new_file_path)\n}\n\n# clean up the temporary directory\nunlink(temp_dir, recursive = TRUE)\n\n\n\n```\n\n\nCrop, mask and build attribute table for the area\nNow that we have the BpS data for the extent of our area of interest, we need to crop/mask it to the exact area of interest, build the raster attribute table and do a few calculations:\n\nFirst, we load our stacked raster data from the file landfire_data.tif.\nNext, we crop and mask this raster using a shapefile to focus on our area of interest.\nWe then plot the cropped and masked raster to visualize our area of interest.\nWe set the levels of the raster to match our attribute data and specify the active category.\n\nExtracting and Processing Values: We extract values from the raster, remove any NA values, and convert the data into a dataframe. This dataframe is then processed to create a frequency table, which is further refined and joined with the raster categories.\nSaving the Results: Finally, we save the processed raster and the attributes dataframe to files for future use.\n\n# load downloaded stacked raster\nUS_200BPS &lt;- rast(\"inputs/landfire_data.tif\")\n\n\n# crop and mask the us_200bps raster using the shapefile\nbps_aoi &lt;- US_200BPS %&gt;%\n  crop(shp) %&gt;%\n  mask(shp)\n\n# set the levels of the raster to bps_conus_atts\nlevels(bps_aoi)[[1]] &lt;- bps_conus_atts\n# set the active category of the raster to \"value\"\nactiveCat(bps_aoi) &lt;- \"VALUE\"\n\n# extract values from the raster, remove na values, and convert to dataframe\nbps_aoi_atts &lt;- values(bps_aoi, dataframe = T, na.rm = T) %&gt;%\n  # create a frequency table of the values\n  table(dnn = \"VALUE\") %&gt;%\n  # convert the table to a dataframe\n  as.data.frame() %&gt;%\n  # convert all columns to character type\n  mutate_all(as.character) %&gt;%\n  # convert all columns to integer type\n  mutate_all(as.integer) %&gt;%\n  # join the dataframe with the raster categories\n  left_join(cats(bps_aoi)[[1]], by = \"VALUE\") %&gt;%\n  # filter out rows with a frequency of 0\n  filter(Freq != 0) %&gt;%\n  # calculate acres and relative percentage\n  mutate(ACRES = round((Freq * 900 / 4046.86), 0),\n         REL_PERCENT = round((Freq / sum(Freq)), 3) * 100) %&gt;%\n  # arrange the dataframe by relative percentage in descending order\n  arrange(desc(REL_PERCENT))\n\n# write the raster to a file with specified options\nwriteRaster(bps_aoi, \"outputs/bps_aoi.tif\",\n            gdal = c(\"COMPRESS=NONE\", \"TFW=YES\"),\n            datatype = \"INT2S\",\n            overwrite = T)\n\n# write the attributes dataframe to a dbf file\nwrite.dbf(bps_aoi_atts, \"outputs/bps_aoi.tif.vat.dbf\")\n\n# write the attributes dataframe to a csv file\nwrite.csv(bps_aoi_atts, \"outputs/bps_aoi_attributes.csv\")\n\n# plot the cropped and masked raster\nplot(bps_aoi)\n\n\n\n\n\n\n\n# look at the first few rows of the aoi attributes\nhead(bps_aoi_atts)\n\n\n\nMake a simple bar chart of the top BpSs\n\nbps_name_10 &lt;- bps_aoi_atts %&gt;%\n  group_by(BPS_NAME) %&gt;%\n  summarize(ACRES = sum(ACRES),\n            REL_PERCENT = sum(REL_PERCENT)) %&gt;%\n  arrange(desc(REL_PERCENT)) %&gt;%\n  top_n(n = 10, wt = REL_PERCENT)\n\n# plot\nbps_chart &lt;- \n  ggplot(data = bps_name_10, aes(x = BPS_NAME, y = REL_PERCENT)) +\n  geom_bar(stat = \"identity\", fill = \"#4a4a48\") +\n  coord_flip() +\n  scale_x_discrete(limits = rev(bps_name_10$BPS_NAME)) +\n  theme_bw(base_size = 14) +\n  labs(\n    title = \"Top 10 Biophysical Settings\",\n    subtitle = landscape_name,\n    x = \"\",\n    y = \"Percent\",\n    caption = \"Represents dominant vegetation systems pre-European colonization. \\n Based on LANDFIRE's Biophysical Settings.  Data available at https://www.landfire.gov/viewer. \") + ## SUGGEST ADDING YOUR NAME AND EMAIL IN CAPTION \n  theme(plot.title.position = \"plot\", \n        plot.caption.position =  \"plot\",\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_blank())\n  \n\nbps_chart\n\n\n\n\n\n\n\n# if the plot looks good, save it\nggsave(\"outputs/bpsChart.png\", width = 12, height = 5)\n\n\n\nMake Hexbin Map\n\n# Calculate the side length for hexagons with 200 km² area\nside_length &lt;- sqrt((2 * 200000000) / (3 * sqrt(3)))\n\n# Create a hexagon grid within the shapefile's bounding box\nhex_grid &lt;- st_make_grid(shp, cellsize = side_length, square = FALSE, what = 'polygons')\n\n# Convert the grid to an sf object\nhex_grid &lt;- st_sf(geometry = hex_grid)\n\n# Add an index column to the hexagon grid\nhex_grid &lt;- hex_grid %&gt;%\n  mutate(index = row_number())\n\n\n# Filter hexagons by centroid using st_intersects\nhex_grid &lt;- hex_grid %&gt;%\n filter(lengths(st_intersects(st_centroid(hex_grid), shp)) &gt; 0)\n\n\n# Ensure attributes are correctly handled\nhex_grid &lt;- hex_grid %&gt;%\n st_set_geometry(st_geometry(hex_grid))\n\n\n\n# Perform the exact_extract operation\nbps_majority_hex &lt;- exact_extract(bps_aoi, hex_grid, 'majority', append_cols = \"index\") %&gt;%\n  left_join(select(bps_aoi_atts,\n                   VALUE,\n                   BPS_MODEL,\n                   BPS_NAME),\n            by = c('majority' = 'VALUE'))\n\n\n\n# Join both BpS and EVT attributes to hex shapefile\nhexs_bps&lt;- hex_grid %&gt;%\n  left_join(bps_majority_hex, by = 'index') \n\n\n#| message: false\n#| warning: false\n#| echo: true\n#| fig.width: 10\n#| fig.height: 12\n#| code-overflow: wrap\n\nbps_names &lt;- unique(bps_name_10$BPS_NAME)\n\nbps_colors &lt;- setNames(custom_palette[1:length(bps_names)], bps_names)\n\npal_bps &lt;- colorFactor(\n  palette = bps_colors,\n  domain = hexs_bps$BPS_NAME\n)\n\n\n# Transform the hex_grid to WGS84\nhexs_bps_4326 &lt;- st_transform(hexs_bps, crs = 4326)\n\n\n\nmap &lt;- leaflet(hexs_bps_4326) %&gt;%\n  addTiles() %&gt;%\n  #fitBounds(lng1 = bbox_list$xmin, lat1 = bbox_list$ymin, lng2 = bbox_list$xmax, lat2 = bbox_list$ymax) %&gt;%\n  addPolygons(\n    fillColor = ~pal_bps(BPS_NAME),\n    color = \"#BDBDC3\",\n    weight = 1,\n    opacity = 1,\n    fillOpacity = 1.0,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#666\",\n      fillOpacity = 1.0,\n      bringToFront = TRUE\n    ),\n    label = ~BPS_NAME,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\"\n    )\n  ) %&gt;%\n  addScaleBar(position = \"bottomleft\", options = scaleBarOptions(metric = TRUE, imperial = FALSE))\n\nmap\n\n\n\n\n# save map as stand alone HTML file\n\nsaveWidget(map, file = \"bps_hexbin_map.html\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this Project",
    "section": "",
    "text": "LANDFIRE (Landscape Fire and Resource Management Planning Tools) is a shared program between the U.S. Department of Agriculture Forest Service Fire and Aviation branch and the U.S. Department of the Interior. LANDFIRE provides 25+ national landscape-scale geo-spatial products, 950 vegetation models, and a suite of tools that support all-lands planning, management, and operations. Included in the product suite are current and historic conditions including ecosystem dynamic models that can be used for conservation, fire planning, and landscape management decisions.\nThe Nature Conservancy (TNC) is a Major Partner in the LANDFIRE Program supported by a cooperative agreement through USDA Forest Service. TNC’s LANDFIRE Team works closely with the LANDFIRE Business Leads, program staff, and other partners to provide support to LANDFIRE and the user community by:\n\nHelping users understand the strengths, weaknesses, and appropriate uses of LANDFIRE products.\nLocating, obtaining, and using geospatial data, tools, and models for fire and natural resource management, planning, and implementation.\nIdentifying and comparing management priorities, evaluating threats to ecosystems, and exploring outcomes under alternative management scenarios.\n\n\nTNC’s LANDFIRE Team is advancing conservation outcomes through collaborative ecosystem science by supporting LANDFIRE users as they locate, obtain and apply the diverse suite of LANDFIRE products and data.\n\nCreated by TNC Ecologist, Randy Swaty, this preliminary landscape assessment leverages LANDFIRE’s unique geospatial products to advance beneficial outcomes for the wildland fire and natural resource communities. The central data in each project are created and managed by the cooperative inter-agency/inter-organizational LANDFIRE program.\nThese charts, maps, and graphs are based on current LANDFIRE products, and provide a starting point for further analysis. All maps, input datasets and further assistance can be obtained by contacting the author, Randy Swaty.\nSubstantial code contributions for GIS data processing by Myles Walimaa."
  },
  {
    "objectID": "about.html#landfire-the-nature-conservancy",
    "href": "about.html#landfire-the-nature-conservancy",
    "title": "About this Project",
    "section": "",
    "text": "LANDFIRE (Landscape Fire and Resource Management Planning Tools) is a shared program between the U.S. Department of Agriculture Forest Service Fire and Aviation branch and the U.S. Department of the Interior. LANDFIRE provides 25+ national landscape-scale geo-spatial products, 950 vegetation models, and a suite of tools that support all-lands planning, management, and operations. Included in the product suite are current and historic conditions including ecosystem dynamic models that can be used for conservation, fire planning, and landscape management decisions.\nThe Nature Conservancy (TNC) is a Major Partner in the LANDFIRE Program supported by a cooperative agreement through USDA Forest Service. TNC’s LANDFIRE Team works closely with the LANDFIRE Business Leads, program staff, and other partners to provide support to LANDFIRE and the user community by:\n\nHelping users understand the strengths, weaknesses, and appropriate uses of LANDFIRE products.\nLocating, obtaining, and using geospatial data, tools, and models for fire and natural resource management, planning, and implementation.\nIdentifying and comparing management priorities, evaluating threats to ecosystems, and exploring outcomes under alternative management scenarios.\n\n\nTNC’s LANDFIRE Team is advancing conservation outcomes through collaborative ecosystem science by supporting LANDFIRE users as they locate, obtain and apply the diverse suite of LANDFIRE products and data.\n\nCreated by TNC Ecologist, Randy Swaty, this preliminary landscape assessment leverages LANDFIRE’s unique geospatial products to advance beneficial outcomes for the wildland fire and natural resource communities. The central data in each project are created and managed by the cooperative inter-agency/inter-organizational LANDFIRE program.\nThese charts, maps, and graphs are based on current LANDFIRE products, and provide a starting point for further analysis. All maps, input datasets and further assistance can be obtained by contacting the author, Randy Swaty.\nSubstantial code contributions for GIS data processing by Myles Walimaa."
  },
  {
    "objectID": "about.html#biophysical-settings-products",
    "href": "about.html#biophysical-settings-products",
    "title": "About this Project",
    "section": "Biophysical Settings Products",
    "text": "Biophysical Settings Products\nA Biophysical Setting (BpS) is a concept that represents the vegetation that may have been dominant on the landscape prior to European colonization of North America and is based on both the current biophysical environment and an approximation of the historical disturbance regime.\n\nLANDFIRE collaborated with experts around the country to create a description and model for every BpS in the US. Find BpS descriptions for your area here.\nCheck out the vegetation modeling website to learn how to integrate BpS into your work.\nRead Blankenship et al. (2021) to learn how the models and descriptions were developed."
  },
  {
    "objectID": "about.html#vegetation-products",
    "href": "about.html#vegetation-products",
    "title": "About this Project",
    "section": "Vegetation Products",
    "text": "Vegetation Products\nLANDFIRE (LF) existing vegetation layers describe the following elements: Existing Vegetation Type (EVT), Existing Vegetation Canopy Cover (EVC), and Existing Vegetation Height (EVH). These layers are created using predictive landscape models based on extensive field-referenced data, satellite imagery and biophysical gradient layers using classification and regression trees.\n\nResources\n\nExisting Vegetation Cover\nExisting Vegetation Height\nExisting Vegetation Type"
  },
  {
    "objectID": "about.html#still-have-questions-landfire-is-here-to-help.",
    "href": "about.html#still-have-questions-landfire-is-here-to-help.",
    "title": "About this Project",
    "section": "Still have questions? LANDFIRE is here to help.",
    "text": "Still have questions? LANDFIRE is here to help.\nAsk the LANDFIRE Helpdesk\nSearch the LANDFIRE Helpdesk Dashboard (see what others are asking and find solutions to common problems)\nSearch (& subscribe to) the LANDFIRE YouTube Channel (see tutorials, Office Hours, quick demonstrations)"
  },
  {
    "objectID": "basic_outline.html",
    "href": "basic_outline.html",
    "title": "Basic Outline",
    "section": "",
    "text": "Task centric\n\nDownload\nClip and prep\nChart\nMap\nCompare\nOther (e.g., connect to outside packages such as GEE)\n\nThis would be easier to deal with—i.e, would make sense to work with data on charts page you already downloaded in that page."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LANDFIRE R Demos",
    "section": "",
    "text": "We are excited to share some R code bits that will help you in your use of LANDFIRE data to assess and visualize ecological patterns on your landscape. We share these bits of code in hopes of not only helping you accelerate your use of LANDFIRE data, but also as a way to start a conversation. We’d love to hear your suggestions, and stories of LANDFIRE data processing with R!"
  },
  {
    "objectID": "index.html#disclaimers-and-how-to-get-help",
    "href": "index.html#disclaimers-and-how-to-get-help",
    "title": "LANDFIRE R Demos",
    "section": "Disclaimers and how to get help",
    "text": "Disclaimers and how to get help\nHere we are sharing code that we use often. It works for us and has been tested. That said, we are not programmers and have not dealt with every possible user environment (e.g., R-Studio, R and/or package versions), do not intend for this to be a general R coding tutorial and cannot take responsibility for outcomes of you trying this code.\nAll of that said, we do want you to be successful and ask that you follow these steps if you run into issues:\n\nCheck your R, R-Studio and package versions. Are they relatively up to date?\nEnsure that you have set up your R-Studio project correctly so that file paths work as expected.\nAs possible troubleshoot with Google and/or your favorite AI\nIf all else fails e-mail landfire@tnc.org"
  },
  {
    "objectID": "index.html#example-outputs",
    "href": "index.html#example-outputs",
    "title": "LANDFIRE R Demos",
    "section": "Example outputs",
    "text": "Example outputs\nOver time we will be adding to the list of demos and outputs you will create.\n\nBiophysical Settings\nIn this demonstration we:\n\nDownload LANDFIRE Biophysical Settings (BpS) data, manage and load into R\nCrop, mask and build attribute table for the area\nMake a simple bar chart of the top BpSs using ggplot2\nMake an interactive hexbin map as one way to tackle some of the challenges of mapping categorical raster data.\n\n\nOne example output:\n\n\n\nInteractive Hexbin Map with Biophysical Settings Data"
  },
  {
    "objectID": "index.html#area-of-interest-for-these-demonstrations",
    "href": "index.html#area-of-interest-for-these-demonstrations",
    "title": "LANDFIRE R Demos",
    "section": "Area of Interest for these demonstrations",
    "text": "Area of Interest for these demonstrations\nFor the demonstrations we used LANDFIRE Map Zone 35 that is located in central Texas. This area contains multiple ecosystems, and was fun for us to work with.\n\n\n\nArea of Interest for these demos: LANDFIRE Map Zone 35"
  }
]