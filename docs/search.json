[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this Project",
    "section": "",
    "text": "Welcome to LANDFIRE R Toolkit — your go-to hub for accelerating landscape analysis with LANDFIRE and R. Here, you’ll find tested, ready-to-use R code that simplifies data access, processing, and visualization for your region. Whether you’re a seasoned analyst or just getting started, this site helps you fast-track your workflow and connect with a growing community of LANDFIRE users who are actively coding, sharing, and tackling real-world challenges."
  },
  {
    "objectID": "about.html#dont-start-from-scratch",
    "href": "about.html#dont-start-from-scratch",
    "title": "About this Project",
    "section": "",
    "text": "Welcome to LANDFIRE R Toolkit — your go-to hub for accelerating landscape analysis with LANDFIRE and R. Here, you’ll find tested, ready-to-use R code that simplifies data access, processing, and visualization for your region. Whether you’re a seasoned analyst or just getting started, this site helps you fast-track your workflow and connect with a growing community of LANDFIRE users who are actively coding, sharing, and tackling real-world challenges."
  },
  {
    "objectID": "about.html#landfire-the-nature-conservancy",
    "href": "about.html#landfire-the-nature-conservancy",
    "title": "About this Project",
    "section": "LANDFIRE & The Nature Conservancy",
    "text": "LANDFIRE & The Nature Conservancy\nLANDFIRE (Landscape Fire and Resource Management Planning Tools) LANDFIRE is a shared interagency wildland fire management data program across the United States and Territories. Leadership, management, and oversight are through the U.S. Department of Agriculture Forest Service - Fire and Aviation Management and the U.S. Department of the Interior – Office of Wildland Fire.\nLANDFIRE provides more than twenty landscape-scale geospatial products of biological and ecological data, including (900+) vegetation types and (13/40) fire behavior fuel models that support all-lands planning, fire and natural resources management, operations, analyses and assessments.\nProject Team: USGS EROS, EROS Technical Support Services Contract (KBR), The Nature Conservancy, USDA Forest Service (Rocky Mountain Research Station) RMRS, Forest Inventory & Analysis (FIA)\nPartners: USGS Gap Analysis, National Land Imaging Programs\nThe Nature Conservancy (TNC) is part of the Project Team, supported by a cooperative agreement through USDA Forest Service. TNC’s LANDFIRE Team works closely with the LANDFIRE Business Leads, program staff, and other partners to provide support to LANDFIRE and the user community by:\n\nHelping users understand the strengths, weaknesses, and appropriate uses of LANDFIRE products.\nLocating, obtaining, and using geospatial data, tools, and models for fire and natural resource management, planning, and implementation.\nIdentifying and comparing management priorities, evaluating threats to ecosystems, and exploring outcomes under alternative management scenarios.\n\n\nTNC’s LANDFIRE Team is advancing conservation outcomes through collaborative ecosystem science by supporting LANDFIRE users as they locate, obtain and apply the diverse suite of LANDFIRE products and data."
  },
  {
    "objectID": "about.html#still-have-questions-landfire-is-here-to-help.",
    "href": "about.html#still-have-questions-landfire-is-here-to-help.",
    "title": "About this Project",
    "section": "Still have questions? LANDFIRE is here to help.",
    "text": "Still have questions? LANDFIRE is here to help.\nAsk the LANDFIRE Helpdesk\nSearch the LANDFIRE Helpdesk Dashboard (see what others are asking and find solutions to common problems)\nSearch (& subscribe to) the LANDFIRE YouTube Channel (see tutorials, Office Hours, quick demonstrations)"
  },
  {
    "objectID": "make_charts.html",
    "href": "make_charts.html",
    "title": "Make charts with LANDFIRE data",
    "section": "",
    "text": "Use this page to:\n\nPractice summarizing LANDFIRE Biophysical Settings data using R to identify dominant vegetation types across the example landscape\nCreate bar charts to visualize relative percentages and acerage, gaining experience in data grouping, plotting, and interpretation"
  },
  {
    "objectID": "make_charts.html#skills-learned",
    "href": "make_charts.html#skills-learned",
    "title": "Make charts with LANDFIRE data",
    "section": "",
    "text": "Use this page to:\n\nPractice summarizing LANDFIRE Biophysical Settings data using R to identify dominant vegetation types across the example landscape\nCreate bar charts to visualize relative percentages and acerage, gaining experience in data grouping, plotting, and interpretation"
  },
  {
    "objectID": "make_charts.html#set-up",
    "href": "make_charts.html#set-up",
    "title": "Make charts with LANDFIRE data",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nWork through the preceding pages, Download data and Prepare rasters for your own Area of Interest OR\nMake sure you have a datasheet with BpS names and Relative Percentages at the least. We will load in the data for our Area of Interest for you to work with if you do not have your own data."
  },
  {
    "objectID": "make_charts.html#code-to-load-packages-and-inputs-summarize-data",
    "href": "make_charts.html#code-to-load-packages-and-inputs-summarize-data",
    "title": "Make charts with LANDFIRE data",
    "section": "Code to load packages and inputs, summarize data",
    "text": "Code to load packages and inputs, summarize data\n\n# load packages\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(stringr)\n\n# read in data for our Area of Interest\nbps_data &lt;- read.csv(\"outputs/bps_aoi_attributes.csv\")\nevt_data &lt;- read.csv(\"outputs/evt_aoi_attributes.csv\")"
  },
  {
    "objectID": "make_charts.html#basic-bar-chart-of-the-biophysical-settings",
    "href": "make_charts.html#basic-bar-chart-of-the-biophysical-settings",
    "title": "Make charts with LANDFIRE data",
    "section": "Basic bar chart of the Biophysical Settings",
    "text": "Basic bar chart of the Biophysical Settings\n\n# summarize data by BpS Name attribute for chart.  We do this as an AoI may have multiple variants if it crosses multiple Map Zones. We also limit output dataframe to the top 10 BpSs.  Customize as needed!\n\nbps_name &lt;- bps_data %&gt;%\n  group_by(BPS_NAME) %&gt;%\n  summarize(ACRES = sum(ACRES),\n            REL_PERCENT = sum(REL_PERCENT)) %&gt;%\n  arrange(desc(REL_PERCENT)) %&gt;%\n  top_n(n = 10, wt = REL_PERCENT)\n\n# plot\nbps_percent_chart &lt;- \n  ggplot(data = bps_name, aes(x = BPS_NAME, y = REL_PERCENT)) + \n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Top 10 Biophysical Settings\",\n    subtitle = \"Represents dominant vegetation systems pre-European colonization\",\n    caption = \"Data from landfire.gov.\",\n    x = \"\",\n    y = \"Percent of landscape\") +\n  scale_x_discrete(limits = rev(bps_name$BPS_NAME),\n                   labels = function(x) str_wrap(x, width = 18)) +\n  coord_flip() +\n  theme_bw(base_size = 14)\n\n\nbps_acres_chart &lt;-\n  ggplot(data = bps_name, aes(x = BPS_NAME, y = ACRES)) + \n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Top 10 Biophysical Settings\",\n    subtitle = \"Represents dominant vegetation systems pre-European colonization\",\n    caption = \"Data from landfire.gov.\",\n    x = \"\",\n    y = \"Acres\") +\n  scale_x_discrete(limits = rev(bps_name$BPS_NAME),\n                   labels = function(x) str_wrap(x, width = 18)) +\n  coord_flip() +\n  theme_bw(base_size = 14) +\n  scale_y_continuous(labels = comma)\n\nbps_acres_chart\n\n\n\n\n\n\n\n\n\nThis chart can be easily replicated for the Existing Vegetation Type data by swapping out input data and names in the chart code. Give it a try!"
  },
  {
    "objectID": "make_charts.html#fire-return-interval-per-bps",
    "href": "make_charts.html#fire-return-interval-per-bps",
    "title": "Make charts with LANDFIRE data",
    "section": "Fire return interval per BpS",
    "text": "Fire return interval per BpS\n\n# Rename columns for clarity\nbps_data_clean &lt;- bps_data %&gt;%\n  rename(\n    Replacement = FRI_REPLAC,\n    Mixed = FRI_MIXED,\n    Surface = FRI_SURFAC\n  )\n\n# Filter top 10 BPS_NAMEs by REL_PERCENT\ntop_bps &lt;- bps_data_clean %&gt;%\n  arrange(desc(REL_PERCENT)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  mutate(\n    BPS_LABEL = paste0(BPS_NAME, \" (\", round(REL_PERCENT), \"%)\")\n  )\n\n# Reshape to long format\nbps_long &lt;- top_bps %&gt;%\n  select(BPS_LABEL, REL_PERCENT, Replacement, Mixed, Surface) %&gt;%\n  pivot_longer(cols = c(Replacement, Mixed, Surface),\n               names_to = \"Fire_Regime\",\n               values_to = \"Years\") %&gt;%\n  filter(Years &gt;= 0)\n\n# Set order of Fire types\nbps_long$Fire_Regime &lt;- factor(bps_long$Fire_Regime, levels = c(\n  \"Surface\",\n  \"Mixed\",\n  \"Replacement\"\n))\n\n# Order BPS_LABEL by REL_PERCENT\nbps_long$BPS_LABEL &lt;- factor(bps_long$BPS_LABEL,\n                             levels = top_bps$BPS_LABEL[order(top_bps$REL_PERCENT, decreasing = TRUE)])\n\n# Plot\n fri_chart &lt;- \n  ggplot(bps_long, aes(x = Years, y = Fire_Regime)) +\n  geom_bar(stat = \"identity\", \n           fill = \"grey50\",\n           width = 0.8, ) +  # grey bars\n  facet_wrap(~ BPS_LABEL, \n             scales = \"free_x\",\n             labeller = label_wrap_gen(width = 25), \n             nrow(3)) +\n  theme_minimal(base_size = 12) +\n  labs(\n    title = \"Historical Fire Regimes\",\n    subtitle = \"Top 10 BpSs selected for illustration. Replacement = 75 - 100% top kill, Mixed = 26 - 74%, Surface = 0 - 25%\",\n    caption = \"\\nData from landfire.gov.\",\n    x = \"Average years between fires\",\n    y = \"\") +\n  theme(plot.caption = element_text(hjust = 0, face= \"italic\"), #Default is hjust=1\n        plot.title.position = \"plot\", #NEW parameter. Apply for subtitle too.\n        plot.caption.position =  \"plot\") +\n  theme(panel.spacing = unit(.05, \"lines\"),\n        panel.border = element_rect(color = \"black\", fill = NA, linewidth = 1), \n        strip.background = element_rect(color = \"black\", linewidth  = 1))\n\n fri_chart"
  },
  {
    "objectID": "download.html",
    "href": "download.html",
    "title": "Download LANDFIRE data into R",
    "section": "",
    "text": "Use this page to:\n\nDownload and prepare LANDFIRE data using the rlandfire package (developed by Mark Buckner), including setting up a project environment and managing spatial data files.\nDefine an area of interest, interact with the LANDFIRE API, and organize downloaded data for future analysis"
  },
  {
    "objectID": "download.html#skills-learned",
    "href": "download.html#skills-learned",
    "title": "Download LANDFIRE data into R",
    "section": "",
    "text": "Use this page to:\n\nDownload and prepare LANDFIRE data using the rlandfire package (developed by Mark Buckner), including setting up a project environment and managing spatial data files.\nDefine an area of interest, interact with the LANDFIRE API, and organize downloaded data for future analysis"
  },
  {
    "objectID": "download.html#datasets-used",
    "href": "download.html#datasets-used",
    "title": "Download LANDFIRE data into R",
    "section": "Datasets used",
    "text": "Datasets used\n\nLANDFIRE Biophysical Settings (BpS)\nExisting Vegetation Type (EVT)"
  },
  {
    "objectID": "download.html#set-up",
    "href": "download.html#set-up",
    "title": "Download LANDFIRE data into R",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nSet up a new R-Studio project, i.e. “r_landfire_demos”\nCreate two directories, “inputs” and “outputs”\nDownload “bps_demo.zip” (clicking will initiate the download that will likely land in your “C:” directory) which contains:\n\nLANDFIRE Map Zone 35 shapefile\nBpS attributes file as a .csv\n\nExtract the “bps_demo.zip” files into the “inputs” sub-directory of your r-studio project.\nCreate and save a new r-script with a name such as “bps_demo_code”.\n\nOnce this set up is complete, you should be able to copy/paste the code below into the r script you created above.\n\nCode to load packages and inputs\n\n# install packages if needed\n  # install.packages(\"foreign\")\n  # install.packages(\"rlandfire\")\n  # install.packages(\"sf\")\n  # install.packages(\"terra\")\n  # install.packages(\"tidyverse\")\n\n# load packages\n\nlibrary(foreign)\nlibrary(rlandfire)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile, plot to check\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n\n\n\n# plot the shape for fun (not much to look at on it's own!)\nplot(shp)"
  },
  {
    "objectID": "download.html#download-manage-and-load-data",
    "href": "download.html#download-manage-and-load-data",
    "title": "Download LANDFIRE data into R",
    "section": "Download manage and load data",
    "text": "Download manage and load data\nTo obtain and manage LANDFIRE data we need to:\n\nDefine the Area of Interest (AOI): The code gets the area of interest from a shapefile.\nSet Parameters for the API Call: It specifies the product code, coordinate system (EPSG:4326), resolution (30 meters), and your email address for the API.\nCreate a Temporary File: A temporary file is created to save the downloaded data.\nCall the LANDFIRE API: The API is called with the specified parameters, and the data is saved to the temporary file.\nMake sure the downloaded data lands in a place where you can find and use it easily\n\nDefine the Destination Path: The destination path for the downloaded file is set.\nMove and Rename the File: The temporary file is moved to the destination path and renamed.\nCreate a Temporary Directory for Unzipping: A temporary directory is created to unzip the downloaded file.\nUnzip the File: The file is unzipped into the temporary directory.\nGet the List of Unzipped Files: A list of unzipped files is obtained.\nRename Each Unzipped File: Each unzipped file is renamed to “landfire_data” followed by its original extension.\nClean Up the Temporary Directory: The temporary directory and its contents are deleted.\n\n\nThe code below does that in roughly 2 minutes with an internet download speed of ~450mbs. Your times may vary.\n\naoi &lt;- getAOI(shp)\n\nproducts &lt;-  c(\"200BPS\", \"240EVT\")  # note, you can download multiple datasets at once\nprojection &lt;- 5070  \nresolution &lt;- 30\nemail &lt;- \"your_email@wah.org\" # REPLACE WITH YOUR E-MAIL ADDRESS PLEASE! \n\n# R specific arguments\nsave_file &lt;- tempfile(fileext = \".zip\")\n\n# call API\nncal &lt;- landfireAPIv2(\n  products, \n  aoi, \n  projection, \n  resolution, \n  path = save_file,\n  email = email)\n\n\n# define the destination path\ndest_file &lt;- file.path(\"inputs\", \"landfire_data.zip\")\n\n# move and rename the file\nfile.rename(save_file, dest_file)\n\n# create a temporary directory for unzipping\ntemp_dir &lt;- tempfile()\ndir.create(temp_dir)\n\n# unzip the file into the temporary directory\nunzip(dest_file, exdir = temp_dir)\n\n# get the list of unzipped files\nunzipped_files &lt;- list.files(temp_dir, full.names = TRUE)\n\n# rename each unzipped file to \"landfire_data\" with its full original extension\nfor (file in unzipped_files) {\n  file_name &lt;- basename(file)\n  file_extension &lt;- sub(\"^[^.]*\", \"\", file_name)  # Extract the full extension\n  new_file_path &lt;- file.path(\"inputs\", paste0(\"landfire_data\", file_extension))\n  file.rename(file, new_file_path)\n}\n\n# clean up the temporary directory\nunlink(temp_dir, recursive = TRUE)"
  },
  {
    "objectID": "download.html#next-steps",
    "href": "download.html#next-steps",
    "title": "Download LANDFIRE data into R",
    "section": "Next steps",
    "text": "Next steps\nYou should see a set of files with “landfire” in the name. Next go to the Prepare rasters page to learn how to load them into R, clip/mask and view them."
  },
  {
    "objectID": "download.html#more-resources",
    "href": "download.html#more-resources",
    "title": "Download LANDFIRE data into R",
    "section": "More resources",
    "text": "More resources\n\nMark Buckner’s rlandfire site also has a nice tutorial.\nThere is also a Python package for downloading LANDFIRE data, [landfire-python])(https://landfire-python.firesci.io/en/latest/). If you try this please let us know!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "",
    "text": "Do you work with LANDFIRE data and want a faster way to dig into ecological patterns across your landscape? You’re in the right place.\nThis site features quick R code demonstrations to help you get started (or go deeper) with LANDFIRE data. We recognize the power of well-written code and encourage the LANDFIRE community to build on this foundation of work. These r code examples are designed to be practical, repeatable, and flexible to fit your needs. We hope the coding tools provided can help you automate your work, leverage LANDFIRE, and get solution-oriented support.\nWe want to hear from you. Do you have feedback, ideas, or a cool way you’re using LANDFIRE data with R? -&gt; Send them our way. Let’s build a community of practice together."
  },
  {
    "objectID": "index.html#why-this-site",
    "href": "index.html#why-this-site",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "",
    "text": "Do you work with LANDFIRE data and want a faster way to dig into ecological patterns across your landscape? You’re in the right place.\nThis site features quick R code demonstrations to help you get started (or go deeper) with LANDFIRE data. We recognize the power of well-written code and encourage the LANDFIRE community to build on this foundation of work. These r code examples are designed to be practical, repeatable, and flexible to fit your needs. We hope the coding tools provided can help you automate your work, leverage LANDFIRE, and get solution-oriented support.\nWe want to hear from you. Do you have feedback, ideas, or a cool way you’re using LANDFIRE data with R? -&gt; Send them our way. Let’s build a community of practice together."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "🔍 Overview",
    "text": "🔍 Overview\nStep 1: LANDFIRE Data – Choose the LANDFIRE Product for your analysis. (Need help deciding? Check our cheatsheet here)\nStep 2: R Code Demos – Use the sample R code on this site to explore your area of interest.\nStep 3: Adjust LANDFIRE to match local conditions. (Not sure how to do that? Try our tutorial)\nStep 4: Insights & Innovations – Build your own tools, share your work, connect with us."
  },
  {
    "objectID": "index.html#making-connections",
    "href": "index.html#making-connections",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "🔍 Making Connections",
    "text": "🔍 Making Connections"
  },
  {
    "objectID": "index.html#working-example",
    "href": "index.html#working-example",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "Working Example",
    "text": "Working Example"
  },
  {
    "objectID": "index.html#use-this-code",
    "href": "index.html#use-this-code",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "🔧 Use this Code",
    "text": "🔧 Use this Code\nUsing R and LANDFIRE products to explore trends and automate analyses can improve outcomes. Based on current LANDFIRE Products, the example code and visualizations will all be based on Map Zone 35, located in Central Texas.\nContained in Map Zone 35 are multiple ecosystems that provide a colorful sandbox to explore these coding demonstrations."
  },
  {
    "objectID": "index.html#map-zone-35",
    "href": "index.html#map-zone-35",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "🗺 Map Zone 35",
    "text": "🗺 Map Zone 35"
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "Getting Started",
    "text": "Getting Started\n\nCheck your R, R-Studio and package versions. We recommend running the most current version of R or R-Studio.\nCheck file paths - is your your R-Studio project correctly set up?\nLet us know if you run into code bugs landfire@tnc.org"
  },
  {
    "objectID": "index.html#disclaimer",
    "href": "index.html#disclaimer",
    "title": "LANDFIRE + R: Accelerate Your Analysis",
    "section": "Disclaimer",
    "text": "Disclaimer\nThe code provided here is offered as-is, without warranty or guarantee of accuracy, functionality, or fitness for a particular purpose. Like any open-source code, it may not perform identically across all systems, versions of R, RStudio, or associated packages. This content is intended for educational and illustrative purposes only and should not be considered a comprehensive guide to R programming. Users are responsible for validating and adapting the code to suit their specific needs and environments. We cannot assume responsibility for any issues, errors, or outcomes resulting from its use."
  },
  {
    "objectID": "prep_rasters.html",
    "href": "prep_rasters.html",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "",
    "text": "Use this page to: - Clip LANDFIRE data to a specific landscape (for this example, Mapzone 34)\n\nCrop, mask and build attribute table for the area then write the files to our ‘outputs’ folder for later use"
  },
  {
    "objectID": "prep_rasters.html#skills-learned",
    "href": "prep_rasters.html#skills-learned",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "",
    "text": "Use this page to: - Clip LANDFIRE data to a specific landscape (for this example, Mapzone 34)\n\nCrop, mask and build attribute table for the area then write the files to our ‘outputs’ folder for later use"
  },
  {
    "objectID": "prep_rasters.html#set-up",
    "href": "prep_rasters.html#set-up",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Set up",
    "text": "Set up\nTo run the code below you will need to:\n\nFollow the set up instructions and run the code on the Download data page, or similar for your landscape and LANDFIRE datasets of interest.\nCreate a new script for the following code.\n\nOnce this set up is complete, you should be able to copy/paste the code below into the r script you created above.\n\nCode to load packages and inputs\n\n# install packages if needed\n  # install.packages(\"foreign\")\n  # install.packages(\"sf\")\n  # install.packages(\"terra\")\n  # install.packages(\"tidyverse\")\n\n# load packages\n\nlibrary(foreign)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile, plot to check\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n\n# read in .csv of CONUS-wide attributes for later joining to AoI BpS table\n\nbps_conus_atts &lt;- read_csv(\"inputs/LF20_BPS_220.csv\")\n\n# another way is directly from landfire.gov\n# bps_url &lt;- \"https://landfire.gov/sites/default/files/CSV/LF2016/LF16_BPS.csv\" # will likely get warning, but it's OK\n# bps_conus_atts &lt;- read.csv(bps_url)\n\n\nevt_conus_atts &lt;- read_csv(\"inputs/LF23_EVT_240.csv\")\n\n# evt_url &lt;- \"https://landfire.gov/sites/default/files/CSV/2024/LF2024_EVT.csv\" # will likely get warning, but it's OK\n# evt_conus_atts &lt;- read.csv(evt_url)\n\n\n# look at the first few rows of the CONUS-wide attribute tables\nprint(head(bps_conus_atts))\nprint(head(evt_conus_atts))"
  },
  {
    "objectID": "prep_rasters.html#crop-mask-and-split-out-the-raster-layers",
    "href": "prep_rasters.html#crop-mask-and-split-out-the-raster-layers",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Crop, mask and split out the raster layers",
    "text": "Crop, mask and split out the raster layers\nNow that we have LANDFIRE data for the extent of our area of interest, we need to crop/mask it to the exact area of interest, build the raster attribute table and do a few calculations:\n\nFirst, we load our stacked raster data from the file landfire_data.tif.\nNext, we crop and mask this raster using a shapefile to focus on our area of interest.\nWe then plot the cropped and masked raster to visualize our area of interest.\nWe set the levels of the raster to match our attribute data and specify the active category.\n\nExtracting and Processing Values: We extract values from the raster, remove any NA values, and convert the data into a dataframe. This dataframe is then processed to create a frequency table, which is further refined and joined with the raster categories.\nSaving the Results: Finally, we save the processed raster and the attributes dataframe to files for future use.\n\n# load in landfire stacked raster\nstacked_rasters &lt;- rast(\"inputs/landfire_data.tif\")\n\n# crop and mask stacked raster \naoi_stacked_rasters &lt;- stacked_rasters %&gt;%\n  crop(shp) %&gt;%\n  mask(shp)\n\n# \"split\" cropped and masked stacked raster into separate layers\nfor(lyr in names(aoi_stacked_rasters)) assign(lyr, aoi_stacked_rasters[[lyr]])"
  },
  {
    "objectID": "prep_rasters.html#build-raster-attribute-table-for-biophysical-settings-data-write-files",
    "href": "prep_rasters.html#build-raster-attribute-table-for-biophysical-settings-data-write-files",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Build Raster Attribute Table for Biophysical Settings Data, write files",
    "text": "Build Raster Attribute Table for Biophysical Settings Data, write files\n\n#| label: Build Raster Attribute Table for Biophysical Settings Data, write files\n#| echo: true\n#| message: false\n#| warning: false\n#| code-overflow: wrap\n#| include: true\n#| results: hide\n#| eval: false\n\n\n\n\n# Assign categories\nlevels(US_200BPS) &lt;- bps_conus_atts\nactiveCat(US_200BPS) &lt;- \"VALUE\"\n\n# Get frequency table \nbps_freq &lt;- freq(US_200BPS) %&gt;%\n  as.data.frame()\n\n# Join with attributes and calculate acres and percent\nbps_aoi_atts &lt;- bps_freq %&gt;%\n  rename(VALUE = value, COUNT = count) %&gt;%\n  mutate(VALUE = as.integer(VALUE)) %&gt;%\n  left_join(bps_conus_atts, by = \"VALUE\") %&gt;%\n  filter(COUNT != 0) %&gt;%\n  mutate(\n    ACRES = round((COUNT * 900 / 4046.86), 0),\n    REL_PERCENT = round((COUNT / sum(COUNT)) * 100, 3)) %&gt;%\n  arrange(desc(REL_PERCENT)) %&gt;%\n  select(-layer)  # Optional: remove 'layer' column\n\n# write the raster to a file with specified options\nwriteRaster(US_200BPS, \"outputs/bps_aoi.tif\",\n            gdal = c(\"COMPRESS=NONE\", \"TFW=YES\"),\n            datatype = \"INT2S\",\n            overwrite = T)\n\n\n|---------|---------|---------|---------|\n=========================================\n                                          \n\n# write the attributes dataframe to a dbf file\nwrite.dbf(bps_aoi_atts, \"outputs/bps_aoi.tif.vat.dbf\")\n\n# write the attributes dataframe to a csv file\nwrite.csv(bps_aoi_atts, \"outputs/bps_aoi_attributes.csv\")\n\n# plot the cropped and masked raster-will just show values in the map.  Output not shown here.\nplot(US_200BPS)\n\n\n\n\n\n\n\n# look at the first few rows of the aoi attributes. Output not shown here.\nprint(head(bps_aoi_atts))\n\n  VALUE    COUNT BPS_CODE ZONE         BPS_MODEL\n1  1718 46439852    11320   35    11320_32_34_35\n2  1725 44125598    13830   35    13830_32_35_36\n3  1728 16449562    13930   35       13930_32_35\n4  1730 13609703    14220   35 14220_32_35_36_37\n5  1723 11475228    13080   35       13080_32_35\n6  1737 10387249    15230   35       15230_32_35\n                                             BPS_NAME  GROUPVEG FRI_REPLAC\n1                          Central Mixedgrass Prairie Grassland          7\n2      Edwards Plateau Limestone Savanna and Woodland  Hardwood         15\n3                 Edwards Plateau Limestone Shrubland   Conifer         69\n4                Southern Blackland Tallgrass Prairie Grassland          3\n5                Crosstimbers Oak Forest and Woodland  Hardwood        158\n6 Edwards Plateau Dry-Mesic Slope Forest and Woodland  Hardwood        103\n  FRI_MIXED FRI_SURFAC FRI_ALLFIR PRC_REPLAC PRC_MIXED PRC_SURFAC FRG_NEW   R\n1        44         21          5         65        12         23     I-A 112\n2        24         14          6         38        23         39     I-B 209\n3        44      -9999         27         39        61      -9999     I-C 255\n4       171         35          2         91         2          7    II-A 255\n5        93          5          5          3         5         92     I-A 137\n6       133         30         20         19        15         66     I-C 102\n    G   B      RED    GREEN     BLUE    ACRES REL_PERCENT\n1 168 112 0.439216 0.658824 0.439216 10327974      26.029\n2 255 115 0.819608 1.000000 0.450980  9813297      24.732\n3 203 125 1.000000 0.796078 0.490196  3658295       9.220\n4 127 127 1.000000 0.498039 0.498039  3026725       7.628\n5  90  68 0.537255 0.352941 0.266667  2552029       6.432\n6 255 171 0.400000 1.000000 0.670588  2310069       5.822"
  },
  {
    "objectID": "prep_rasters.html#build-raster-attribute-table-for-existing-vegetation-type-data-write-files",
    "href": "prep_rasters.html#build-raster-attribute-table-for-existing-vegetation-type-data-write-files",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Build Raster Attribute Table for Existing Vegetation Type Data, write files",
    "text": "Build Raster Attribute Table for Existing Vegetation Type Data, write files\n\n# Assign categories\nlevels(US_240EVT) &lt;- evt_conus_atts\nactiveCat(US_240EVT) &lt;- \"VALUE\"\n\n# Get frequency table \nevt_freq &lt;- freq(US_240EVT) %&gt;%\n  as.data.frame()\n\n# Join with attributes and calculate acres and percent\nevt_aoi_atts &lt;- evt_freq %&gt;%\n  rename(VALUE = value, COUNT = count) %&gt;%\n  mutate(VALUE = as.integer(VALUE)) %&gt;%\n  left_join(evt_conus_atts, by = \"VALUE\") %&gt;%\n  filter(COUNT != 0) %&gt;%\n  mutate(\n    ACRES = round((COUNT * 900 / 4046.86), 0),\n    REL_PERCENT = round((COUNT / sum(COUNT)) * 100, 3)\n  ) %&gt;%\n  arrange(desc(REL_PERCENT)) %&gt;%\n  select(-layer)  # Optional: remove 'layer' column\n\n# write the raster to a file with specified options\nwriteRaster(US_240EVT, \"outputs/evt_aoi.tif\",\n            gdal = c(\"COMPRESS=NONE\", \"TFW=YES\"),\n            datatype = \"INT2S\",\n            overwrite = T)\n\n# write the attributes dataframe to a dbf file\nwrite.dbf(evt_aoi_atts, \"outputs/evt_aoi.tif.vat.dbf\")\n\n# write the attributes dataframe to a csv file\nwrite.csv(evt_aoi_atts, \"outputs/evt_aoi_attributes.csv\")\n\n# plot the cropped and masked raster-will just show values in the map.  Output not shown here.\nplot(US_240EVT)\n\n# look at the first few rows of the aoi attributes. Output not shown here.\nprint(head(evt_aoi_atts))"
  },
  {
    "objectID": "prep_rasters.html#next-steps",
    "href": "prep_rasters.html#next-steps",
    "title": "Clip and prep LANDFIRE rasters",
    "section": "Next steps",
    "text": "Next steps\nYou can now open up the processed raster(s) in ArcGIS pro and/or QGIS to do further GIS. This process really shines when you do multiple LANDFIRE datasets at once and/or process data for multiple landscapes. Further, you can work in Excel, R or other software to make charts of the attributes that are saved as a .csv file. Go to the Make Charts page to get started.\nWhile we are sure it is possible to make attractive, accessible maps with the processed LANDFIRE rasters in R, we typically move to a different GIS software for mapping, or summarize the data by polygons (e.g., watersheds or hexagons) in R. Try the code on the Make hex map for ways you might map LANDFIRE data in R."
  },
  {
    "objectID": "make_hex_map.html",
    "href": "make_hex_map.html",
    "title": "Make hexagon maps",
    "section": "",
    "text": "Use this page to:\n\nCreate hexagonal grids to summarize dominant LANFDIRE vegetation types across example landscape, enabling spatial analysis beyond raster cell comparisons\nBuild an interactive Leaflet map with toggle display to visualize dominant BpS and EVT within each hexagon"
  },
  {
    "objectID": "make_hex_map.html#skills-learned",
    "href": "make_hex_map.html#skills-learned",
    "title": "Make hexagon maps",
    "section": "",
    "text": "Use this page to:\n\nCreate hexagonal grids to summarize dominant LANFDIRE vegetation types across example landscape, enabling spatial analysis beyond raster cell comparisons\nBuild an interactive Leaflet map with toggle display to visualize dominant BpS and EVT within each hexagon"
  },
  {
    "objectID": "make_hex_map.html#set-up",
    "href": "make_hex_map.html#set-up",
    "title": "Make hexagon maps",
    "section": "Set up",
    "text": "Set up\nFor this work we will use the Area of Interest shapefile, and pre-downloaded BpS and EVT rasters. Before you can complete this page you will need to complete the work on the Download data and Prepare rasters pages.\n\nCode to load packages and inputs\n\n# Load packages\nlibrary(exactextractr)\nlibrary(jsonlite)\nlibrary(leaflet)\nlibrary(leaflet.providers)\nlibrary(RColorBrewer)\nlibrary(sf)\nlibrary(terra)\nlibrary(tidyverse)\n\n\n# read in Area of Interest (aoi) shapefile\n\nshp &lt;- st_read(\"inputs/map_zone_35.shp\", quiet = TRUE) %&gt;% \n  st_transform(crs = 5070) %&gt;%\n  st_union() %&gt;%\n  st_sf()\n\n# read in .csv of CONUS-wide attributes for later joining to AoI BpS table\n\nbps_conus_atts &lt;- read_csv(\"inputs/LF20_BPS_220.csv\")\n\n# another way is directly from landfire.gov\n# bps_url &lt;- \"https://landfire.gov/sites/default/files/CSV/LF2016/LF16_BPS.csv\" # will likely get warning, but it's OK\n# bps_conus_atts &lt;- read.csv(bps_url)\n\n\nevt_conus_atts &lt;- read_csv(\"inputs/LF23_EVT_240.csv\")\n\n# evt_url &lt;- \"https://landfire.gov/sites/default/files/CSV/2024/LF2024_EVT.csv\" # will likely get warning, but it's OK\n# evt_conus_atts &lt;- read.csv(evt_url)\n\n# load in landfire stacked raster\nstacked_rasters &lt;- rast(\"inputs/landfire_data.tif\")\n\n# \"split\" cropped and masked stacked raster into separate layers\nfor(lyr in names(stacked_rasters)) assign(lyr, stacked_rasters[[lyr]])\n\n\n\nMake hexgrid ~ 25,000 acres a piece\nIn this step we make a hexgrid map for our area of interest and confirm hexagon size.\n\n# Hexagon side length in meters for ~25,000 ac hexagons\nhex_side &lt;- 10930\n\n# Create full hex grid\nhex_grid &lt;- st_make_grid(shp,\n                         cellsize = hex_side,\n                         square = FALSE,\n                         what = \"polygons\") %&gt;%\n                          st_sf()\n\nhex_grid_clipped &lt;- st_intersection(hex_grid, shp) %&gt;%\n  mutate(index = row_number())\n\n\nplot(st_geometry(hex_grid_clipped))\n\n\n\n\n\n\n\n# Calculate area in square meters\nhex_grid_size &lt;- hex_grid %&gt;%\n  mutate(area_m2 = st_area(.),\n         area_acres = as.numeric(area_m2) / 4046.86)\n\n\n\nCalculate majority type per hexagon\nBelow we use the extactextractr package to extract the majority (most dominant) BpS value and EVT value per hexagon, the we join in a minimal number of attributes (e.g., EVT_NAME) for mapping demo."
  },
  {
    "objectID": "make_hex_map.html#make-the-map",
    "href": "make_hex_map.html#make-the-map",
    "title": "Make hexagon maps",
    "section": "Make the map",
    "text": "Make the map\nBelow we use our attributed hexgrid to make a clickable leaflet map with the BpS and EVT layers for our area of interest.\n\nhexs_bps_evt &lt;- st_read(\"outputs/bps_evt_hexs.shp\") \n\nReading layer `bps_evt_hexs' from data source \n  `C:\\Users\\rswaty\\Documents\\r_demos\\outputs\\bps_evt_hexs.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1648 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -508742.8 ymin: 655736 xmax: -74984.26 ymax: 1177230\nProjected CRS: NAD83 / Conus Albers\n\nhexs_bps_evt &lt;- st_transform(hexs_bps_evt , crs = 4326)\n\n# Create a dynamic color palette\nbps_names &lt;- unique(hexs_bps_evt$BPS_NAME)\nevt_names &lt;- unique(hexs_bps_evt$EVT_NAME)\n\n# Use a colorblind-friendly base palette and expand it\nbase_palette &lt;- RColorBrewer::brewer.pal(8, \"Set2\")  # Set2 is colorblind-friendly\nbps_colors &lt;- colorRampPalette(base_palette)(length(bps_names))\n\npal_bps &lt;- colorFactor(\n  palette = bps_colors,\n  domain = bps_names\n)\n\n# Repeat for EVT\nevt_colors &lt;- colorRampPalette(base_palette)(length(evt_names))\n\npal_evt &lt;- colorFactor(\n  palette = evt_colors,\n  domain = evt_names\n)\n\n\n\n\n# Get the bounding box of the shapefile\nbbox &lt;- st_bbox(hexs_bps_evt)\n\n# Convert bounding box to named list\nbbox_list &lt;- as.list(bbox)\n\n# Convert named list to JSON\njson_output &lt;- toJSON(bbox_list, keep_vec_names = TRUE)\n\n\n\nleaflet(hexs_bps_evt) %&gt;%\n  addTiles() %&gt;%\n\n  fitBounds(lng1 = bbox_list$xmin, lat1 = bbox_list$ymin, lng2 = bbox_list$xmax, lat2 = bbox_list$ymax) %&gt;%\n\n  addPolygons(\n    fillColor = ~pal_bps(BPS_NAME),\n    color = \"#BDBDC3\",\n    weight = 1,\n    opacity = 1,\n    fillOpacity = 1.0,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#666\",\n      fillOpacity = 1.0,\n      bringToFront = TRUE\n    ),\n    label = ~BPS_NAME,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\"\n    ),\n    group = \"Biophysical Settings\"\n  ) %&gt;%\n  addPolygons(\n    fillColor = ~pal_evt(EVT_NAME),\n    color = \"#BDBDC3\",\n    weight = 1,\n    opacity = 1,\n    fillOpacity = 1.0,\n    highlightOptions = highlightOptions(\n      weight = 2,\n      color = \"#666\",\n      fillOpacity = 1.0,\n      bringToFront = TRUE\n    ),\n    label = ~EVT_NAME,\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\"\n    ),\n    group = \"Existing Vegetation Types\"\n  ) %&gt;%\naddLayersControl(\n    overlayGroups = c(\"Biophysical Settings\", \"Existing Vegetation Types\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  hideGroup(\"Existing Vegetation Types\") %&gt;% # Hide this group initially\n  addScaleBar(position = \"bottomleft\", options = scaleBarOptions(metric = TRUE, imperial = FALSE))"
  }
]